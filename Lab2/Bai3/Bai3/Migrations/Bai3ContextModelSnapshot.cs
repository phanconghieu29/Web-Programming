// <auto-generated />
using Bai3.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bai3.Migrations
{
    [DbContext(typeof(Bai3Context))]
    partial class Bai3ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bai3.Models.BookModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProducer")
                        .HasColumnType("int");

                    b.Property<int>("IdType")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProducerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProducerId");

                    b.ToTable("BookModel");
                });

            modelBuilder.Entity("Bai3.Models.ProducerModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProducerModel");
                });

            modelBuilder.Entity("Bai3.Models.TypeBookModel", b =>
                {
                    b.Property<string>("BookId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeModelId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BookId", "TypeId");

                    b.HasIndex("TypeModelId");

                    b.ToTable("TypeBookModel");
                });

            modelBuilder.Entity("Bai3.Models.TypeModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeModel");
                });

            modelBuilder.Entity("Bai3.Models.BookModel", b =>
                {
                    b.HasOne("Bai3.Models.ProducerModel", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerId");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("Bai3.Models.TypeBookModel", b =>
                {
                    b.HasOne("Bai3.Models.TypeModel", null)
                        .WithMany("TypeBooks")
                        .HasForeignKey("TypeModelId");
                });

            modelBuilder.Entity("Bai3.Models.TypeModel", b =>
                {
                    b.Navigation("TypeBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
